-- VHDL data flow description generated from `sdetj_b_l_net`
--		date : Tue Apr 30 21:18:51 2019


-- Entity Declaration

ENTITY sdetj_b_l_net IS
  PORT (
  alarm : out BIT;	-- alarm
  door : out BIT;	-- door
  clk : in BIT;	-- clk
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  day_time : in BIT;	-- day_time
  reset : in BIT;	-- reset
  code : in bit_vector(3 DOWNTO 0) 	-- code
  );
END sdetj_b_l_net;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF sdetj_b_l_net IS
  SIGNAL fsm_alarm_cs : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- fsm_alarm_cs
  SIGNAL not_aux1 : BIT;		-- not_aux1
  SIGNAL not_aux4 : BIT;		-- not_aux4
  SIGNAL not_aux2 : BIT;		-- not_aux2
  SIGNAL not_fsm_alarm_cs : BIT_VECTOR(2 DOWNTO 0);	-- not_fsm_alarm_cs
  SIGNAL not_aux3 : BIT;		-- not_aux3
  SIGNAL not_aux0 : BIT;		-- not_aux0
  SIGNAL not_code : BIT_VECTOR(3 DOWNTO 2);	-- not_code
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL an12_x1_sig : BIT;		-- an12_x1_sig
  SIGNAL no2_x1_sig : BIT;		-- no2_x1_sig
  SIGNAL a3_x2_sig : BIT;		-- a3_x2_sig
  SIGNAL a3_x2_2_sig : BIT;		-- a3_x2_2_sig
  SIGNAL nao22_x1_sig : BIT;		-- nao22_x1_sig
  SIGNAL na2_x1_sig : BIT;		-- na2_x1_sig
  SIGNAL na2_x1_2_sig : BIT;		-- na2_x1_2_sig
  SIGNAL no2_x1_2_sig : BIT;		-- no2_x1_2_sig
  SIGNAL na3_x1_2_sig : BIT;		-- na3_x1_2_sig
  SIGNAL na3_x1_sig : BIT;		-- na3_x1_sig
  SIGNAL o2_x2_sig : BIT;		-- o2_x2_sig
  SIGNAL o3_x2_sig : BIT;		-- o3_x2_sig
  SIGNAL no4_x1_sig : BIT;		-- no4_x1_sig
  SIGNAL na3_x1_4_sig : BIT;		-- na3_x1_4_sig
  SIGNAL na3_x1_3_sig : BIT;		-- na3_x1_3_sig
  SIGNAL no2_x1_3_sig : BIT;		-- no2_x1_3_sig
  SIGNAL na3_x1_5_sig : BIT;		-- na3_x1_5_sig
  SIGNAL no2_x1_4_sig : BIT;		-- no2_x1_4_sig
  SIGNAL na3_x1_6_sig : BIT;		-- na3_x1_6_sig
  SIGNAL a2_x2_sig : BIT;		-- a2_x2_sig
  SIGNAL nao22_x1_2_sig : BIT;		-- nao22_x1_2_sig

BEGIN
  nao22_x1_2_sig <= NOT(((not_aux4 OR a2_x2_sig) AND not_aux3));
  a2_x2_sig <= (na3_x1_6_sig AND na3_x1_5_sig);
  na3_x1_6_sig <= NOT(((no2_x1_4_sig AND fsm_alarm_cs(0)) AND 
not_fsm_alarm_cs(1)));
  no2_x1_4_sig <= NOT((code(3) OR not_code(2)));
  na3_x1_5_sig <= NOT(((no2_x1_3_sig AND fsm_alarm_cs(1)) AND 
fsm_alarm_cs(2)));
  no2_x1_3_sig <= NOT((code(3) OR code(2)));
  na3_x1_3_sig <= NOT(((not_aux3 AND na3_x1_4_sig) AND o3_x2_sig));
  na3_x1_4_sig <= NOT(((no4_x1_sig AND fsm_alarm_cs(0)) AND 
not_fsm_alarm_cs(2)));
  no4_x1_sig <= NOT((((code(0) OR code(3)) OR code(1)) OR code(2)
));
  o3_x2_sig <= ((o2_x2_sig OR not_aux2) OR fsm_alarm_cs(0));
  o2_x2_sig <= (not_aux4 OR not_code(3));
  na3_x1_sig <= NOT(((not_aux3 AND na3_x1_2_sig) AND nao22_x1_sig
));
  na3_x1_2_sig <= NOT(((no2_x1_2_sig AND na2_x1_2_sig) AND 
na2_x1_sig));
  no2_x1_2_sig <= NOT((not_aux4 OR not_aux2));
  na2_x1_2_sig <= NOT((code(3) AND fsm_alarm_cs(0)));
  na2_x1_sig <= NOT((not_code(3) AND not_fsm_alarm_cs(1)));
  nao22_x1_sig <= NOT(((a3_x2_2_sig OR a3_x2_sig) AND an12_x1_sig));
  a3_x2_2_sig <= ((code(3) AND day_time) AND code(2));
  a3_x2_sig <= ((no2_x1_sig AND fsm_alarm_cs(1)) AND 
not_fsm_alarm_cs(0));
  no2_x1_sig <= NOT((code(3) OR not_code(2)));
  an12_x1_sig <= (NOT(code(1)) AND code(0));
  aux4 <= (NOT(code(0)) AND code(1));
  not_code (2) <= NOT(code(2));
  not_code (3) <= NOT(code(3));
  not_aux0 <= (fsm_alarm_cs(1) OR fsm_alarm_cs(2));
  not_aux3 <= (NOT(reset) AND not_aux0);
  not_fsm_alarm_cs (0) <= NOT(fsm_alarm_cs(0));
  not_fsm_alarm_cs (1) <= NOT(fsm_alarm_cs(1));
  not_fsm_alarm_cs (2) <= NOT(fsm_alarm_cs(2));
  not_aux2 <= (code(2) OR not_fsm_alarm_cs(2));
  not_aux4 <= NOT(aux4);
  not_aux1 <= (reset OR not_aux0);
  label0 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    fsm_alarm_cs (0) <= GUARDED na3_x1_sig;
  END BLOCK label0;
  label1 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    fsm_alarm_cs (1) <= GUARDED na3_x1_3_sig;
  END BLOCK label1;
  label2 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    fsm_alarm_cs (2) <= GUARDED nao22_x1_2_sig;
  END BLOCK label2;

alarm <= NOT((fsm_alarm_cs(0) OR not_aux1));

door <= NOT((not_fsm_alarm_cs(0) OR not_aux1));
END;
